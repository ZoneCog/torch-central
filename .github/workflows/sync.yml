name: Sync Repositories

on:
  push:
    branches:
      - main
  workflow_dispatch:
  workflow_call:
    inputs:
      org_name:
        required: true
        type: string

jobs:
  sync-repos:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout central repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup git authentication and user
      run: |
        git config --global url."https://${{ secrets.GITHUB_TOKEN }}@github.com/".insteadOf "https://github.com/"
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

    - name: Determine branch name
      id: determine-branch
      run: |
        BASE_BRANCH="${{ inputs.org_name }}"
        BRANCH="$BASE_BRANCH"
        VERSION=1
        while git ls-remote --exit-code --heads origin "$BRANCH"; do
          VERSION=$((VERSION + 1))
          BRANCH="${BASE_BRANCH}-v${VERSION}"
        done
        echo "BRANCH_NAME=$BRANCH" >> $GITHUB_ENV
        echo "Determined branch name: $BRANCH"

    - name: Create or switch to branch
      run: |
        git checkout -b $BRANCH_NAME

    - name: Clean untracked files
      run: |
        git clean -fdx

    - name: Download repo_list.txt
      uses: actions/download-artifact@v4
      with:
        name: repo_list

    - name: Read repository list
      run: |
        REPO_LIST=$(cat repo_list.txt | tr '\n' ' ')
        echo "REPO_LIST=$REPO_LIST" >> $GITHUB_ENV
        echo "Repository list: $REPO_LIST"

    - name: Print REPO_LIST
      run: |
        echo "REPO_LIST: $REPO_LIST"

    - name: Sync repositories
      run: |
        echo "REPO_LIST in sync step: $REPO_LIST"
        for REPO in $REPO_LIST; do
          if [ "$REPO" = ".github" ]; then
            echo "Skipping .github repository..."
            continue
          fi
          echo "Processing $REPO..."
          {
            git clone "https://github.com/elizaOS/$REPO.git" "$REPO" &&
            if [ -d "$REPO" ] && [ "$(ls -A $REPO)" ]; then
              rm -rf "$REPO/.git"
              git add "$REPO"
              git commit -m "Add $REPO repository as a subfolder"
            else
              echo "Failed to clone $REPO or $REPO is empty"
            fi
          } || {
            echo "Skipping $REPO due to errors..."
          }
        done

    - name: List directories
      run: |
        ls -la
        for REPO in $REPO_LIST; do
          if [ -d "$REPO" ]; then
            echo "Contents of $REPO:"
            ls -la "$REPO"
          fi
        done

    - name: Push changes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git push "https://${{ secrets.GITHUB_TOKEN }}@github.com/ZoneCog/elizaos-central.git" $BRANCH_NAME
